package com.demboyz.carservice;

import com.demboyz.carservice.model.User;
import com.demboyz.carservice.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@EnableAutoConfiguration
@RequestMapping("/database")
public class DatabaseTest {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @GetMapping(path="/add") // Map ONLY GET Requests
    @ResponseBody
    public String addNewUser() {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User user = new User();
        user.setFirstName("testFirstName");
        user.setLastName("testLastName");
        user.setProfilePictureId(-1);
        user.setInfoId(-1);
        user.setFlag(-1);
        user.setLastEditTime(1514563570);
        user.setCreationTime(1514563570);
        userRepository.save(user);
        return "Saved";
    }

    @GetMapping(path="/all")
    @ResponseBody
    public Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    /*@RequestMapping("/test")
    @ResponseBody
    public static void main(String[] args) {
        System.out.println("test");
        SessionFactory sessionFactory = util.getSessionFactory();
        Session session = sessionFactory.openSession();
        session.beginTransaction();
        User user = new User();
        user.setFirstName("testFirstName");
        user.setLastName("testLastName");
        user.setProfilePictureId(-1);
        user.setInfoId(-1);
        user.setFlag(-1);
        user.setLastEditTime(1514563570);
        user.setCreationTime(1514563570);

        long id = (Long) session.save(user);
        session.getTransaction().commit();

        User fetchedUser = (User) session.get(User.class, id);
        System.out.println(fetchedUser);

        session.close();
    }*/

}
